// <auto-generated />
using EmpresaTVxCable.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpresaTVxCable.Migrations
{
    [DbContext(typeof(BdTvXcableContext))]
    partial class BdTvXcableContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmpresaTVxCable.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<int>("IdZona")
                        .HasColumnType("int")
                        .HasColumnName("id_zona");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdZona");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Contrato", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contrato");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContrato"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.HasKey("IdContrato");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdServicio");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Region", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_region");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegion"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRegion");

                    b.ToTable("region", (string)null);
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.HasKey("IdServicio");

                    b.ToTable("servicio", (string)null);
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.ZonaGeografica", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"));

                    b.Property<int>("IdRegion")
                        .HasColumnType("int")
                        .HasColumnName("id_region");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdZona");

                    b.HasIndex("IdRegion");

                    b.ToTable("zona_geografica", (string)null);
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Cliente", b =>
                {
                    b.HasOne("EmpresaTVxCable.Models.ZonaGeografica", "IdZonaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdZona")
                        .IsRequired()
                        .HasConstraintName("FK_cliente_zona_geografica");

                    b.Navigation("IdZonaNavigation");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Contrato", b =>
                {
                    b.HasOne("EmpresaTVxCable.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_contrato_cliente");

                    b.HasOne("EmpresaTVxCable.Models.Servicio", "IdServicioNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK_contrato_servicio");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.ZonaGeografica", b =>
                {
                    b.HasOne("EmpresaTVxCable.Models.Region", "IdRegionNavigation")
                        .WithMany("ZonaGeograficas")
                        .HasForeignKey("IdRegion")
                        .IsRequired()
                        .HasConstraintName("FK_zona_geografica_region");

                    b.Navigation("IdRegionNavigation");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Cliente", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Region", b =>
                {
                    b.Navigation("ZonaGeograficas");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.Servicio", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("EmpresaTVxCable.Models.ZonaGeografica", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
